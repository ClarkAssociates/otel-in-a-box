services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000" # Exposes Grafana UI on host port 3000 (http://localhost:3000)
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
      - loki
      - tempo
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    networks:
      - otel

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090" # Exposes Prometheus UI on host port 9090 (http://localhost:9090)
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - otel

  loki:
    image: grafana/loki:3.1.0
    container_name: loki
    entrypoint: /usr/bin/loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    networks:
      - otel

  tempo:
    image: grafana/tempo
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo-config.yml:/etc/tempo.yaml
      - tempo-data:/var/tempo
    networks:
      - otel

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel
    ports:
      - 8889:8889 # Prometheus exporter metrics
      - 4317:4317 # OTLP gRPC receiver
    volumes:
      - ./otel/otel-collector-config.yml:/etc/otelcol-contrib/config.yaml
    networks:
      - otel

volumes:
  tempo-data:
  loki-data:

networks:
  otel:
    driver: bridge
    name: otel
